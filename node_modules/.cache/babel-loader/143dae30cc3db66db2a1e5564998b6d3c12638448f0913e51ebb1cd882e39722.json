{"ast":null,"code":"export const makeFirstLetterCapital = text => {\n  const terms = text.toLowerCase().trim().split(' ');\n  const capitalizeWord = word => {\n    let capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1);\n    if (word.split('-').length === 2) {\n      capitalizedWord = capitalizedWord.slice(0, 1) + capitalizedWord.charAt(1).toUpperCase() + capitalizedWord.slice(2);\n    }\n    return capitalizedWord;\n  };\n  const capitalizedTerms = terms.map(capitalizeWord);\n  return capitalizedTerms.join(' ');\n};","map":{"version":3,"names":["makeFirstLetterCapital","text","terms","toLowerCase","trim","split","capitalizeWord","word","capitalizedWord","charAt","toUpperCase","slice","length","capitalizedTerms","map","join"],"sources":["C:/Users/KarenM/Documents/GitHub/ManagementAccountProject/src/forms/utils/algoMethods.js"],"sourcesContent":["\r\nexport const makeFirstLetterCapital = (text) => {\r\n    const terms = text.toLowerCase().trim().split(' ');\r\n  \r\n    const capitalizeWord = (word) => {\r\n        let capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1);\r\n        if (word.split('-').length === 2) {\r\n            capitalizedWord = capitalizedWord.slice(0, 1) + capitalizedWord.charAt(1).toUpperCase() + capitalizedWord.slice(2);\r\n        }\r\n        return capitalizedWord;\r\n    };\r\n    const capitalizedTerms = terms.map(capitalizeWord);\r\n    return capitalizedTerms.join(' ');\r\n  };"],"mappings":"AACA,OAAO,MAAMA,sBAAsB,GAAIC,IAAI,IAAK;EAC5C,MAAMC,KAAK,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAElD,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC7B,IAAIC,eAAe,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IAClE,IAAIJ,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC,CAACO,MAAM,KAAK,CAAC,EAAE;MAC9BJ,eAAe,GAAGA,eAAe,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGH,eAAe,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,eAAe,CAACG,KAAK,CAAC,CAAC,CAAC;IACtH;IACA,OAAOH,eAAe;EAC1B,CAAC;EACD,MAAMK,gBAAgB,GAAGX,KAAK,CAACY,GAAG,CAACR,cAAc,CAAC;EAClD,OAAOO,gBAAgB,CAACE,IAAI,CAAC,GAAG,CAAC;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}