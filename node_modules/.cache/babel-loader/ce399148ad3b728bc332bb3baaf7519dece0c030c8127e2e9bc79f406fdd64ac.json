{"ast":null,"code":"import { jwtDecode } from \"jwt-decode\";\nconst TOKEN = \"my token\";\nexport const setTokenInLocalStorage = encryptedToken => {\n  localStorage.setItem(TOKEN, encryptedToken);\n};\nexport const removeToken = () => localStorage.removeItem(TOKEN);\nexport const getToken = () => localStorage.getItem(TOKEN);\nexport const getUser = () => {\n  try {\n    const myToken = getToken();\n    return jwtDecode(myToken);\n  } catch (error) {\n    return null;\n  }\n};","map":{"version":3,"names":["jwtDecode","TOKEN","setTokenInLocalStorage","encryptedToken","localStorage","setItem","removeToken","removeItem","getToken","getItem","getUser","myToken","error"],"sources":["C:/Users/KarenM/Documents/GitHub/ManagementAccountProject/src/users/services/localStorageServices.js"],"sourcesContent":["import  { jwtDecode } from \"jwt-decode\";\r\n\r\nconst TOKEN = \"my token\";\r\n\r\nexport const setTokenInLocalStorage = (encryptedToken) => {\r\n    localStorage.setItem(TOKEN, encryptedToken);\r\n};\r\n\r\nexport const removeToken = () => localStorage.removeItem(TOKEN);\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN);\r\n\r\nexport const getUser = () => {\r\n    try {\r\n        const myToken = getToken();\r\n        return jwtDecode(myToken);\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n};"],"mappings":"AAAA,SAAUA,SAAS,QAAQ,YAAY;AAEvC,MAAMC,KAAK,GAAG,UAAU;AAExB,OAAO,MAAMC,sBAAsB,GAAIC,cAAc,IAAK;EACtDC,YAAY,CAACC,OAAO,CAACJ,KAAK,EAAEE,cAAc,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAMF,YAAY,CAACG,UAAU,CAACN,KAAK,CAAC;AAE/D,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAMJ,YAAY,CAACK,OAAO,CAACR,KAAK,CAAC;AAEzD,OAAO,MAAMS,OAAO,GAAGA,CAAA,KAAM;EACzB,IAAI;IACA,MAAMC,OAAO,GAAGH,QAAQ,CAAC,CAAC;IAC1B,OAAOR,SAAS,CAACW,OAAO,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}