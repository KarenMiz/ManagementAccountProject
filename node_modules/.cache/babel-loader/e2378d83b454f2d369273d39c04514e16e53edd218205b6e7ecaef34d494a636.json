{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { useUser } from \"../providers/UserProvider\";\nimport { editUser, getUserData, login, signup } from \"../services/uesersApiService\";\nimport { getUser, removeToken, setTokenInLocalStorage } from \"../services/localStorageServices\";\nimport { useNavigate } from \"react-router-dom\";\nimport ROUTES from \"../../routes/routesModel\";\nimport normalizEditForUser from \"../helpers/normalization/normalizeEditForUser\";\nimport { useSnack } from \"../../providers/SnackbarProvider\";\nimport normalizeUser from \"../helpers/normalization/normalizeUser\";\nconst useUsers = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState();\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    setUser,\n    setToken\n  } = useUser();\n  const setSnack = useSnack();\n  const handleLogin = useCallback(async userLogin => {\n    setIsLoading(true);\n    try {\n      const token = await login(userLogin);\n      setTokenInLocalStorage(token);\n      setToken(token);\n      setUser(getUser());\n      navigate(ROUTES.CARDS);\n    } catch (error) {\n      setError(error.message);\n      setSnack(\"error\", \"Incorrect email or password\");\n    }\n    setIsLoading(false);\n  }, [setToken, setUser, navigate, setSnack]);\n  const handleLogout = useCallback(() => {\n    removeToken();\n    setUser(null);\n  }, [setUser]);\n  const handleSignup = useCallback(async userFromClient => {\n    setIsLoading(true);\n    try {\n      const normalizedUser = normalizeUser(userFromClient);\n      await signup(normalizedUser);\n      await handleLogin({\n        email: userFromClient.email,\n        password: userFromClient.password\n      });\n    } catch (error) {\n      setError(error.message);\n      setSnack(\"error\", error.message);\n    }\n    setIsLoading(false);\n  }, [handleLogin, setSnack]);\n  const handleGetUser = useCallback(async id => {\n    try {\n      const userData = await getUserData(id);\n      setIsLoading(false);\n      setError(null);\n      return userData;\n    } catch (error) {\n      setIsLoading(false);\n      setError(error);\n    }\n  }, []);\n  return {\n    isLoading,\n    error,\n    handleLogin,\n    handleLogout,\n    handleSignup,\n    handleGetUser\n  };\n};\n_s(useUsers, \"2xLuUTaqoUTEg/Xhj7YhrAWgyA0=\", false, function () {\n  return [useNavigate, useUser, useSnack];\n});\nexport default useUsers;","map":{"version":3,"names":["useCallback","useState","useUser","editUser","getUserData","login","signup","getUser","removeToken","setTokenInLocalStorage","useNavigate","ROUTES","normalizEditForUser","useSnack","normalizeUser","useUsers","_s","isLoading","setIsLoading","error","setError","navigate","setUser","setToken","setSnack","handleLogin","userLogin","token","CARDS","message","handleLogout","handleSignup","userFromClient","normalizedUser","email","password","handleGetUser","id","userData"],"sources":["C:/Users/KarenM/Documents/GitHub/ManagementAccountProject/src/users/hooks/useUsers.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport { useUser } from \"../providers/UserProvider\";\r\nimport { editUser, getUserData, login, signup } from \"../services/uesersApiService\";\r\nimport {\r\n  getUser,\r\n  removeToken,\r\n  setTokenInLocalStorage,\r\n} from \"../services/localStorageServices\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ROUTES from \"../../routes/routesModel\";\r\nimport normalizEditForUser from \"../helpers/normalization/normalizeEditForUser\";\r\nimport { useSnack } from \"../../providers/SnackbarProvider\";\r\nimport normalizeUser from \"../helpers/normalization/normalizeUser\";\r\n\r\n\r\nconst useUsers = () => {\r\n  const [isLoading, setIsLoading] = useState();\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { setUser, setToken } = useUser();\r\n  const setSnack = useSnack();\r\n\r\n  const handleLogin = useCallback(\r\n    async (userLogin) => {\r\n      setIsLoading(true);\r\n      try {\r\n        const token = await login(userLogin);\r\n        setTokenInLocalStorage(token);\r\n        setToken(token);\r\n        setUser(getUser());\r\n        navigate(ROUTES.CARDS);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setSnack(\"error\", \"Incorrect email or password\");\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    [setToken, setUser, navigate, setSnack]\r\n  );\r\n\r\n  const handleLogout = useCallback(() => {\r\n    removeToken();\r\n    setUser(null);\r\n  }, [setUser]);\r\n\r\n  const handleSignup = useCallback(\r\n    async (userFromClient) => {\r\n      setIsLoading(true);\r\n      try {\r\n        const normalizedUser = normalizeUser(userFromClient);\r\n        await signup(normalizedUser);\r\n        await handleLogin({\r\n          email: userFromClient.email,\r\n          password: userFromClient.password,\r\n        });\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setSnack(\"error\", error.message);\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    [handleLogin, setSnack]\r\n  );\r\n\r\n\r\n\r\n  const handleGetUser = useCallback(async (id) => {\r\n    try {\r\n      const userData = await getUserData(id);\r\n      setIsLoading(false);\r\n      setError(null);\r\n      return userData;\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setError(error);\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  return { isLoading, error, handleLogin, handleLogout, handleSignup, handleGetUser};\r\n};\r\n\r\nexport default useUsers;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}