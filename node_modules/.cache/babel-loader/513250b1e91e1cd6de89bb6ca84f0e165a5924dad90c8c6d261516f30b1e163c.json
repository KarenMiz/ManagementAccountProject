{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport Joi from \"joi\";\nexport default function useForm(initialForm, schema, handleSubmit) {\n  _s();\n  const [data, setData] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n  const validateProperty = useCallback((name, value) => {\n    const obj = {\n      [name]: value\n    };\n    const generateSchema = Joi.object({\n      [name]: schema[name]\n    });\n    const {\n      error\n    } = generateSchema.validate(obj);\n    return error ? error.details[0].message : null;\n  }, [schema]);\n  const handleChange = useCallback(event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const errorMessage = validateProperty(name, value);\n    if (errorMessage) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: errorMessage\n      }));\n    } else {\n      setErrors(prev => {\n        let obj = {\n          ...prev\n        };\n        delete obj[name];\n        return obj;\n      });\n    }\n    setData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }, [validateProperty]);\n  const handleChangeCheckBox = useCallback(event => {\n    const name = event.target.name;\n    const value = event.target.checked;\n    const errorMessage = validateProperty(name, value);\n    if (errorMessage) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: errorMessage\n      }));\n    } else {\n      setErrors(prev => {\n        let obj = {\n          ...prev\n        };\n        delete obj[name];\n        return obj;\n      });\n    }\n    setData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }, [validateProperty]);\n  const handleReset = useCallback(() => {\n    setData(initialForm);\n    setErrors({});\n  }, [initialForm]);\n  const validateForm = useCallback(() => {\n    const schemaForValidate = Joi.object(schema);\n    const {\n      error\n    } = schemaForValidate.validate(data);\n    if (error) return false;\n    return true;\n  }, [data, schema]);\n  const onSubmit = useCallback(() => {\n    handleSubmit(data);\n  }, [handleSubmit, data]);\n  return {\n    data,\n    errors,\n    setData,\n    handleChange,\n    handleReset,\n    validateForm,\n    onSubmit,\n    handleChangeCheckBox\n  };\n}\n_s(useForm, \"gnqAtKyhRk2NXAXndqK0wOpatfE=\");","map":{"version":3,"names":["useCallback","useState","Joi","useForm","initialForm","schema","handleSubmit","_s","data","setData","errors","setErrors","validateProperty","name","value","obj","generateSchema","object","error","validate","details","message","handleChange","event","target","errorMessage","prev","handleChangeCheckBox","checked","handleReset","validateForm","schemaForValidate","onSubmit"],"sources":["C:/Users/KarenM/Documents/GitHub/ManagementAccountProject/src/forms/hooks/useForm.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport Joi from \"joi\";\r\n\r\nexport default function useForm(initialForm, schema, handleSubmit) {\r\n  const [data, setData] = useState(initialForm);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateProperty = useCallback(\r\n    (name, value) => {\r\n      const obj = { [name]: value };\r\n      const generateSchema = Joi.object({ [name]: schema[name] });\r\n      const { error } = generateSchema.validate(obj);\r\n      return error ? error.details[0].message : null;\r\n    },\r\n    [schema]\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n      const errorMessage = validateProperty(name, value);\r\n      if (errorMessage) {\r\n        setErrors((prev) => ({ ...prev, [name]: errorMessage }));\r\n      } else {\r\n        setErrors((prev) => {\r\n          let obj = { ...prev };\r\n          delete obj[name];\r\n          return obj;\r\n        });\r\n      }\r\n      setData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [validateProperty]\r\n  );\r\n\r\n  const handleChangeCheckBox = useCallback(\r\n    (event) => {\r\n      const name = event.target.name;\r\n      const value = event.target.checked;\r\n      const errorMessage = validateProperty(name, value);\r\n      if (errorMessage) {\r\n        setErrors((prev) => ({ ...prev, [name]: errorMessage }));\r\n      } else {\r\n        setErrors((prev) => {\r\n          let obj = { ...prev };\r\n          delete obj[name];\r\n          return obj;\r\n        });\r\n      }\r\n      setData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [validateProperty]\r\n  );\r\n\r\n\r\n  const handleReset = useCallback(() => {\r\n    setData(initialForm);\r\n    setErrors({});\r\n  }, [initialForm]);\r\n\r\n  const validateForm = useCallback(() => {\r\n    const schemaForValidate = Joi.object(schema);\r\n    const { error } = schemaForValidate.validate(data);\r\n    if (error) return false;\r\n    return true;\r\n  }, [data, schema]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    handleSubmit(data);\r\n  }, [handleSubmit, data]);\r\n\r\n  return {\r\n    data,\r\n    errors,\r\n    setData,\r\n    handleChange,\r\n    handleReset,\r\n    validateForm,\r\n    onSubmit,\r\n    handleChangeCheckBox,\r\n  };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}