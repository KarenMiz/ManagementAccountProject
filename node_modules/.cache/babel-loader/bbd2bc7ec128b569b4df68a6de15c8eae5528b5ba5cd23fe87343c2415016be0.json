{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarenM\\\\Documents\\\\GitHub\\\\ManagementAccountProject\\\\src\\\\users\\\\providers\\\\UserProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { getUser, getToken } from '../services/localStorageServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport default function UserProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(getToken());\n  useEffect(() => {\n    if (!user) {\n      const userFromLocalStorage = getUser();\n      setUser(userFromLocalStorage);\n    }\n  }, [user]);\n  const value = useMemo(() => ({\n    user,\n    setUser,\n    token,\n    setToken\n  }), [user, token]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n}\n_s(UserProvider, \"QP7pRJ1p0ufo7BkOvxenWOfhEOk=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) throw new Error(\"useUser must be used within a provider\");\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","getUser","getToken","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","token","setToken","userFromLocalStorage","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/KarenM/Documents/GitHub/ManagementAccountProject/src/users/providers/UserProvider.jsx"],"sourcesContent":["import React, {\r\n    createContext,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n  } from 'react';\r\n  import { getUser, getToken } from '../services/localStorageServices';\r\n  \r\n  const UserContext = createContext();\r\n  \r\n  export default function UserProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(getToken());\r\n  \r\n    useEffect(() => {\r\n      if (!user) {\r\n        const userFromLocalStorage = getUser();\r\n        setUser(userFromLocalStorage);\r\n      }\r\n    }, [user]);\r\n  \r\n    const value = useMemo(\r\n      () => ({ user, setUser, token, setToken }),\r\n      [user, token]\r\n    );\r\n  \r\n    return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n  }\r\n  \r\n  export const useUser = () => {\r\n    const context = useContext(UserContext);\r\n    if (!context) throw new Error(\"useUser must be used within a provider\");\r\n    return context;\r\n  };\r\n  "],"mappings":";;;AAAA,OAAOA,KAAK,IACRC,aAAa,EACbC,UAAU,EACVC,SAAS,EACTC,OAAO,EACPC,QAAQ,QACH,OAAO;AACd,SAASC,OAAO,EAAEC,QAAQ,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,eAAe,SAASU,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAAC;EAE9CJ,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,IAAI,EAAE;MACT,MAAMI,oBAAoB,GAAGZ,OAAO,CAAC,CAAC;MACtCS,OAAO,CAACG,oBAAoB,CAAC;IAC/B;EACF,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,MAAMK,KAAK,GAAGf,OAAO,CACnB,OAAO;IAAEU,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC,EAC1C,CAACH,IAAI,EAAEE,KAAK,CACd,CAAC;EAED,oBAAOP,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAP,QAAA,EAAEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E;AAACX,EAAA,CAjBuBF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAmBpC,OAAO,MAAMe,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG1B,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAI,CAACkB,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;EACvE,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}